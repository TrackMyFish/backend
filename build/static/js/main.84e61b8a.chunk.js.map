{"version":3,"sources":["components/Admin/index.js","components/App/index.js","components/App/App.js","stores/FishStore/FishStore.js","stores/FishStore/index.js","stores/TankStore/TankStore.js","stores/TankStore/index.js","components/Fish/index.js","components/Fish/Fish.js","components/FishHashDecoder/index.js","components/FishHashDecoder/FishHashDecoder.js","components/FishTable/index.js","components/FishTable/FishTable.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/Tank/index.js","components/Tank/Tank.js","components/TankStatisticsGraph/index.js","components/TankStatisticsGraph/TankStatisticsGraph.js","components/TankStatisticsTable/index.js","components/TankStatisticsTable/TankStatisticsTable.js","reportWebVitals.js","index.js"],"names":["App","observer","exact","from","to","path","component","Fish","Tank","FishHashDecoder","fishStore","fishState","fish","heartbeat","fishbase","status","error","axios","method","headers","url","config","server","baseURL","then","res","runInAction","data","catch","err","console","log","response","listFish","addFish","type","subtype","color","gender","purchaseDate","count","toUpperCase","push","message","removeFish","id","filter","e","makeAutoObservable","this","FishStoreContext","React","createContext","tankStore","tankState","stats","resetError","listTankStatistics","tankStatistics","addTankStatistic","testDate","ammonia","ph","nitrate","nitrite","gh","kh","phosphate","tankStatistic","removeTankStatistic","TankStoreContext","useContext","useEffect","className","showAdd","showDelete","showID","enableHash","fishError","useState","hash","setHash","showTable","setShowTable","setFish","errs","setErrs","xmlns","style","display","fill","viewBox","d","map","idx","role","width","height","aria-label","xlinkHref","data-bs-dismiss","onSubmit","preventDefault","length","JSON","parse","atob","htmlFor","value","onChange","target","rows","FishTable","props","setType","setSubtype","setColor","setGender","setPurchaseDate","setCount","setErr","showToast","setShowToast","toggleShowToast","btoa","stringify","columns","Header","accessor","headerClassName","Cell","row","onClick","original","Toast","show","onClose","navigator","clipboard","writeText","Body","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","aria-labelledby","data-bs-parent","min","uppercaseGender","sortable","pageSize","Navbar","backgroundColor","href","tankStatisticsError","TankStatisticsGraph","sorted","sort","a","b","Date","ResponsiveContainer","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","YAxis","Tooltip","Legend","Line","connectNulls","stroke","TankStatisticsTable","setTestDate","useRef","step","placeholder","ref","current","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84e61b8a.chunk.js","sourcesContent":["import Admin from \"./Admin\";\nexport default Admin;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  // HashRouter because it works better with backend routing\n  // https://github.com/gorilla/mux/issues/464\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport { Fish, Tank, FishHashDecoder } from \"../\";\n\nconst App = observer(() => {\n  return (\n    <Router>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/fish\" />\n        <Route path=\"/fish\" component={Fish} />\n        <Route path=\"/tank\" component={Tank} />\n        <Route path=\"/hash-decode\" component={FishHashDecoder} />\n      </Switch>\n    </Router>\n  );\n});\n\nexport default App;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass FishStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fishState = {\n    fish: [],\n\n    heartbeat: {\n      fishbase: {\n        status: \"\",\n      },\n    },\n\n    error: null,\n  };\n\n  heartbeat = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/heartbeat\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.heartbeat.fishbase.status =\n            res?.data?.fishbase?.status;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  listFish = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.fish = res.data.fish;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addFish = ({ type, subtype, color, gender, purchaseDate, count }) => {\n    if (gender === \"\") {\n      gender = \"UNSPECIFIED\";\n    }\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n      data: {\n        type,\n        subtype,\n        color,\n        gender: gender.toUpperCase(),\n        purchaseDate,\n        count,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.fish.push(res?.data?.fish);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.fishState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeFish = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.fishState.fish = this.fishState.fish.filter((e) => e.id !== id);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.fishState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst fishStore = new FishStore();\nconst FishStoreContext = React.createContext(fishStore);\nexport default FishStoreContext;\n","import FishStoreContext from \"./FishStore\";\nexport default FishStoreContext;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass TankStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  tankState = {\n    stats: [],\n\n    error: null,\n  };\n\n  resetError = () => {\n    this.tankState.error = null;\n  };\n\n  listTankStatistics = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.tankState.stats = res.data.tankStatistics;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addTankStatistic = ({\n    testDate,\n    ammonia,\n    ph,\n    nitrate,\n    nitrite,\n    gh,\n    kh,\n    phosphate,\n  }) => {\n    this.resetError();\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics\",\n      data: {\n        testDate,\n        ammonia,\n        ph,\n        nitrate,\n        nitrite,\n        gh,\n        kh,\n        phosphate,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.tankState.stats.push(res?.data?.tankStatistic);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.tankState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeTankStatistic = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.tankState.stats = this.tankState.stats.filter(\n            (e) => e.id !== id\n          );\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.tankState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst tankStore = new TankStore();\nconst TankStoreContext = React.createContext(tankStore);\nexport default TankStoreContext;\n","import TankStoreContext from \"./TankStore\";\nexport default TankStoreContext;\n","import Fish from \"./Fish\";\nexport default Fish;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { FishTable } from \"../\";\nimport { FishStoreContext } from \"../../stores\";\n\nexport const Fish = observer(() => {\n  const { fishState, listFish, addFish, removeFish } =\n    useContext(FishStoreContext);\n\n  useEffect(() => {\n    listFish();\n  }, [fishState]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      <FishTable\n        showAdd\n        showDelete\n        showID\n        enableHash\n        fish={fishState.fish}\n        addFish={addFish}\n        removeFish={removeFish}\n        fishError={fishState.error}\n      />\n    </div>\n  );\n});\n\nexport default Fish;\n","import FishHashDecoder from \"./FishHashDecoder\";\nexport default FishHashDecoder;\n","import React, { useState } from \"react\";\n\nimport { Navbar, FishTable } from \"../\";\n\nexport const FishHashDecoder = () => {\n  const [hash, setHash] = useState(\"\");\n  const [showTable, setShowTable] = useState(false);\n  const [fish, setFish] = useState([]);\n\n  const [errs, setErrs] = useState([\"Only paste hashes from people you trust\"]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Don't do anything if there isn't a hash\n    if (hash === \"\") {\n      setErrs([...errs, \"Hash not provided\"]);\n      return;\n    }\n\n    console.log(hash.length);\n\n    // There's an artifical limit of 100,000\n    // to prevent performance issues\n    if (hash.length > 100000) {\n      setErrs([...errs, \"Hash exceeds the 100,000 character limit\"]);\n      return;\n    }\n\n    try {\n      setFish(JSON.parse(atob(hash)));\n    } catch (e) {\n      setErrs([...errs, \"Error parsing hash: \" + e]);\n    }\n\n    setShowTable(true);\n  };\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      <svg xmlns=\"http://www.w3.org/2000/svg\" style={{ display: \"none\" }}>\n        <symbol\n          id=\"exclamation-triangle-fill\"\n          fill=\"currentColor\"\n          viewBox=\"0 0 16 16\"\n        >\n          <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\n        </symbol>\n      </svg>\n      <div className=\"container\">\n        {errs.map((err, idx) => (\n          <div\n            key={idx}\n            className=\"alert alert-danger d-flex align-items-center alert-dismissible fade show\"\n            role=\"alert\"\n          >\n            <svg\n              className=\"bi flex-shrink-0 me-2\"\n              width=\"24\"\n              height=\"24\"\n              role=\"img\"\n              aria-label=\"Danger:\"\n            >\n              <use xlinkHref=\"#exclamation-triangle-fill\" />\n            </svg>\n            <div>{err}</div>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"alert\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n        ))}\n      </div>\n      <div className=\"container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-3\">\n            <label htmlFor=\"inputHash\" className=\"form-label\">\n              Fish Hash\n            </label>\n            <textarea\n              value={hash}\n              onChange={(e) => setHash(e.target.value)}\n              className=\"form-control\"\n              id=\"inputHash\"\n              rows=\"3\"\n            ></textarea>\n          </div>\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Submit\n          </button>\n        </form>\n        <div className=\"mt-3 mb-3\" />\n        {showTable && <FishTable fish={fish} />}\n      </div>\n    </div>\n  );\n};\n\nexport default FishHashDecoder;\n","import FishTable from \"./FishTable\";\nexport default FishTable;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\nimport Toast from \"react-bootstrap/Toast\";\n\nconst FishTable = observer((props) => {\n  const [type, setType] = useState(\"\");\n  const [subtype, setSubtype] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  const [err, setErr] = useState(\"\");\n\n  const [showToast, setShowToast] = useState(false);\n  const [hash, setHash] = useState(\"\");\n\n  const toggleShowToast = () => {\n    // Only re-generate the hash when showing the toast\n    if (!showToast) {\n      setHash(btoa(JSON.stringify(props.fish)));\n    }\n\n    setShowToast(!showToast);\n  };\n\n  const addFish = (e) => {\n    e.preventDefault();\n\n    const uppercaseGender = gender.toUpperCase();\n\n    props.addFish({\n      type,\n      subtype,\n      color,\n      gender,\n      uppercaseGender,\n      purchaseDate,\n      count,\n    });\n  };\n\n  const handleCopy = (e) => {\n    e.preventDefault();\n\n    navigator.clipboard.writeText(hash);\n  };\n\n  const error = props.fishError || err;\n\n  const columns = [];\n\n  if (props.showID) {\n    columns.push({\n      Header: \"ID\",\n      accessor: \"id\",\n      headerClassName: \"text-start\",\n    });\n  }\n\n  columns.push(\n    { Header: \"Type\", accessor: \"type\", headerClassName: \"text-start\" },\n    { Header: \"Subtype\", accessor: \"subtype\", headerClassName: \"text-start\" },\n    { Header: \"Color\", accessor: \"color\", headerClassName: \"text-start\" },\n    {\n      Header: \"Gender\",\n      accessor: \"gender\",\n      headerClassName: \"text-start\",\n      Cell: ({ value }) => (value === \"UNSPECIFIED\" ? \"\" : value),\n    },\n    {\n      Header: \"Purchase Date\",\n      accessor: \"purchaseDate\",\n      headerClassName: \"text-start\",\n    },\n    { Header: \"Count\", accessor: \"count\", headerClassName: \"text-start\" }\n  );\n\n  if (props.showDelete) {\n    columns.push({\n      className: \"text-center\",\n      Cell: (row) => (\n        <button\n          className=\"btn btn-danger ml-2\"\n          onClick={() => props.removeFish(row.original.id)}\n        >\n          Remove\n        </button>\n      ),\n    });\n  }\n\n  return (\n    <div className=\"container-fluid\">\n      {props.enableHash && (\n        <div>\n          <div className=\"row text-start\">\n            <div className=\"col\">\n              <Toast show={showToast} onClose={toggleShowToast}>\n                <Toast.Header>\n                  <strong className=\"me-auto\">TrackMyFish Hash</strong>\n                  <small>\n                    <button\n                      type=\"button\"\n                      className=\"btn btn-outline-primary btn-sm\"\n                      onClick={handleCopy}\n                    >\n                      Copy to clipboard\n                    </button>\n                  </small>\n                </Toast.Header>\n                <Toast.Body className=\"fish-toast\">{hash}</Toast.Body>\n              </Toast>\n            </div>\n          </div>\n\n          <h3 className=\"text-center\">Fish</h3>\n          <div className=\"container-fluid\">\n            <div className=\"row text-end\">\n              <div className=\"col pe-0\">\n                <button\n                  onClick={toggleShowToast}\n                  type=\"button\"\n                  className=\"btn btn-info\"\n                >\n                  Share Fish\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      {props.showAdd && (\n        <div className=\"accordion\" id=\"create-fish-accordion\">\n          <div className=\"accordion-item\">\n            <h2 className=\"accordion-header\" id=\"fish-heading\">\n              <button\n                className=\"accordion-button collapsed\"\n                type=\"button\"\n                data-bs-toggle=\"collapse\"\n                data-bs-target=\"#collapse-fish\"\n                aria-expanded=\"false\"\n                aria-controls=\"collapse-fish\"\n              >\n                Add Fish\n              </button>\n            </h2>\n            <div\n              id=\"collapse-fish\"\n              className=\"accordion-collapse collapse\"\n              aria-labelledby=\"fish-heading\"\n              data-bs-parent=\"#create-fish-accordion\"\n            >\n              <div className=\"accordion-body\">\n                <form>\n                  <div className=\"container-fluid ps-0 pe-0\">\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputType\" className=\"form-label\">\n                            Type\n                          </label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputType\"\n                            onChange={(e) =>\n                              setErr(\"\") || setType(e.target.value)\n                            }\n                            value={type}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputSubtype\" className=\"form-label\">\n                            Subtype\n                          </label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputSubtype\"\n                            onChange={(e) =>\n                              setErr(\"\") || setSubtype(e.target.value)\n                            }\n                            value={subtype}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"row\"></div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputColor\" className=\"form-label\">\n                            Color\n                          </label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputColor\"\n                            onChange={(e) =>\n                              setErr(\"\") || setColor(e.target.value)\n                            }\n                            value={color}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputGender\" className=\"form-label\">\n                            Gender\n                          </label>\n                          <input\n                            type=\"text\"\n                            className=\"form-control\"\n                            id=\"inputGender\"\n                            onChange={(e) =>\n                              setErr(\"\") || setGender(e.target.value)\n                            }\n                            value={gender}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"row\">\n                        <div className=\"col\">\n                          <div className=\"mb-3\">\n                            <label\n                              htmlFor=\"inputPurchaseDate\"\n                              className=\"form-label\"\n                            >\n                              Purchase Date\n                            </label>\n                            <input\n                              type=\"date\"\n                              className=\"form-control\"\n                              id=\"inputPurchaseDate\"\n                              onChange={(e) =>\n                                setErr(\"\") || setPurchaseDate(e.target.value)\n                              }\n                              value={purchaseDate}\n                            />\n                          </div>\n                        </div>\n                        <div className=\"col\">\n                          <div className=\"mb-3\">\n                            <label htmlFor=\"inputCount\" className=\"form-label\">\n                              Count\n                            </label>\n                            <input\n                              type=\"number\"\n                              className=\"form-control\"\n                              id=\"inputCount\"\n                              min=\"0\"\n                              onChange={(e) =>\n                                setErr(\"\") || setCount(e.target.value)\n                              }\n                              value={count}\n                            />\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary\"\n                    onClick={addFish}\n                  >\n                    Submit\n                  </button>\n                </form>\n                {error && (\n                  <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                    {error}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n      <ReactTable\n        data={props.fish}\n        sortable={true}\n        pageSize={props.fish.length}\n        columns={columns}\n      />\n    </div>\n  );\n});\n\nexport default FishTable;\n","import Navbar from './Navbar';\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-light\"\n      style={{ backgroundColor: \"#d7ecd9\" }}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          TrackMyFish\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/fish\">\n                Fish\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/tank\">\n                Tank\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/hash-decode\">\n                Hash-Decoder\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import Tank from \"./Tank\";\nexport default Tank;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { TankStatisticsTable, TankStatisticsGraph } from \"../\";\nimport { TankStoreContext } from \"../../stores\";\n\nexport const Tank = observer(() => {\n  const {\n    tankState,\n    resetError,\n    listTankStatistics,\n    addTankStatistic,\n    removeTankStatistic,\n  } = useContext(TankStoreContext);\n\n  useEffect(() => {\n    listTankStatistics();\n  }, [tankState]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      <TankStatisticsTable\n        tankStatistics={tankState.stats}\n        addTankStatistic={addTankStatistic}\n        removeTankStatistic={removeTankStatistic}\n        tankStatisticsError={tankState.error}\n        resetError={resetError}\n      />\n      <div className=\"mt-3 mb-3\" />\n      <TankStatisticsGraph tankStatistics={tankState.stats} />\n    </div>\n  );\n});\n\nexport default Tank;\n","import TankStatisticsGraph from \"./TankStatisticsGraph\";\nexport default TankStatisticsGraph;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nimport \"react-table-6/react-table.css\";\n\nconst TankStatisticsGraph = observer((props) => {\n  const sorted = props.tankStatistics\n    .filter((e) => e.testDate !== \"\")\n    .sort((a, b) => new Date(a.testDate) - new Date(b.testDate));\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"50%\">\n      <LineChart\n        data={sorted}\n        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"testDate\" padding={{ left: 30, right: 30 }} />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line connectNulls type=\"monotone\" dataKey=\"ammonia\" stroke=\"#ff7300\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"ph\" stroke=\"#387908\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"nitrite\" stroke=\"#ff008c\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"nitrate\" stroke=\"#0077ff\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"gh\" stroke=\"#aa00ff\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"kh\" stroke=\"#ff0011\" />\n        <Line\n          connectNulls\n          type=\"monotone\"\n          dataKey=\"phosphate\"\n          stroke=\"#5c5c5c\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n});\n\nexport default TankStatisticsGraph;\n","import TankStatisticsTable from \"./TankStatisticsTable\";\nexport default TankStatisticsTable;\n","import React, { useRef, useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nconst TankStatisticsTable = observer((props) => {\n  const [testDate, setTestDate] = useState(\"\");\n\n  const ph = useRef(null);\n  const ammonia = useRef(null);\n  const nitrate = useRef(null);\n  const nitrite = useRef(null);\n  const gh = useRef(null);\n  const kh = useRef(null);\n  const phosphate = useRef(null);\n\n  const addTankStatistic = (e) => {\n    e.preventDefault();\n\n    props.addTankStatistic({\n      testDate,\n      ammonia: ammonia.current.value ? ammonia.current.value : null,\n      ph: ph.current.value ? ph.current.value : null,\n      nitrate: nitrate.current.value ? nitrate.current.value : null,\n      nitrite: nitrite.current.value ? nitrite.current.value : null,\n      gh: gh.current.value ? gh.current.value : null,\n      kh: kh.current.value ? kh.current.value : null,\n      phosphate: phosphate.current.value ? phosphate.current.value : null,\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"text-center\">Tank Statistics</h3>\n      <div className=\"accordion\" id=\"create-tank-statistic-accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"fish-heading\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapse-tank-statistic\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse-tank-statistic\"\n            >\n              Add Tank Statistics\n            </button>\n          </h2>\n          <div\n            id=\"collapse-tank-statistic\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"fish-heading\"\n            data-bs-parent=\"#create-tank-statistic-accordion\"\n          >\n            <div className=\"accordion-body\">\n              <form>\n                <div className=\"container-fluid ps-0 pe-0\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputTestDate\" className=\"form-label\">\n                          Test Date\n                        </label>\n                        <input\n                          type=\"date\"\n                          className=\"form-control\"\n                          id=\"inputTestDate\"\n                          onChange={(e) => setTestDate(e.target.value)}\n                          value={testDate}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputPH\" className=\"form-label\">\n                          pH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputPH\"\n                          placeholder=\"pH\"\n                          ref={ph}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputAmmonia\" className=\"form-label\">\n                          Ammonia\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputAmmonia\"\n                          placeholder=\"Ammonia (ppm)\"\n                          ref={ammonia}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputNitrite\" className=\"form-label\">\n                          Nitrite (NO2)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputNitrite\"\n                          placeholder=\"Nitrite (ppm)\"\n                          ref={nitrite}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputNitrate\" className=\"form-label\">\n                          Nitrate (NO3)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputNitrate\"\n                          placeholder=\"Nitrate (ppm)\"\n                          ref={nitrate}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputPhosphate\" className=\"form-label\">\n                          Phosphate (PO4)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputPhosphate\"\n                          placeholder=\"Phosphate (ppm)\"\n                          ref={phosphate}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGH\" className=\"form-label\">\n                          GH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputGH\"\n                          placeholder=\"GH\"\n                          ref={gh}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputKH\" className=\"form-label\">\n                          KH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputKH\"\n                          placeholder=\"KH\"\n                          ref={kh}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={addTankStatistic}\n                >\n                  Submit\n                </button>\n              </form>\n              {props.tankStatisticsError && (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                  {props.tankStatisticsError}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <ReactTable\n        data={props.tankStatistics}\n        sortable={true}\n        pageSize={props.tankStatistics.length}\n        columns={[\n          {\n            Header: \"ID\",\n            accessor: \"id\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Test Date\",\n            accessor: \"testDate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Ammonia\",\n            accessor: \"ammonia\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"pH\",\n            accessor: \"ph\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Nitite\",\n            accessor: \"nitrite\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Nitrate\",\n            accessor: \"nitrate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"GH\",\n            accessor: \"gh\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"KH\",\n            accessor: \"kh\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Phosphate\",\n            accessor: \"phosphate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            className: \"text-center\",\n            Cell: (row) => (\n              <button\n                className=\"btn btn-danger ml-2\"\n                onClick={() => props.removeTankStatistic(row.original.id)}\n              >\n                Remove\n              </button>\n            ),\n          },\n        ]}\n      />\n    </div>\n  );\n});\n\nexport default TankStatisticsTable;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./index.css\";\nimport \"./scss/_custom.scss\";\n\nimport { App } from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}