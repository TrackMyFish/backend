{"version":3,"sources":["components/Admin/index.js","components/App/index.js","components/App/App.js","stores/FishStore/FishStore.js","stores/FishStore/index.js","stores/TankStore/TankStore.js","stores/TankStore/index.js","components/Fish/index.js","components/Fish/Fish.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/FishTable/index.js","components/FishTable/FishTable.js","components/Tank/index.js","components/Tank/Tank.js","components/TankStatisticsTable/index.js","components/TankStatisticsTable/TankStatisticsTable.js","reportWebVitals.js","index.js"],"names":["App","observer","exact","from","to","path","component","Fish","Tank","fishStore","fishState","fish","heartbeat","fishbase","status","error","axios","method","headers","url","config","server","baseURL","then","res","runInAction","data","catch","err","console","log","response","listFish","addFish","genus","species","commonName","name","color","gender","purchaseDate","count","toUpperCase","push","message","removeFish","id","filter","e","makeAutoObservable","this","FishStoreContext","React","createContext","tankStore","tankState","stats","resetError","listTankStatistics","tankStatistics","addTankStatistic","testDate","ammonia","ph","nitrate","nitrite","gh","kh","phosphate","tankStatistic","removeTankStatistic","TankStoreContext","useContext","useEffect","fishbaseDown","toLowerCase","className","role","href","type","data-bs-dismiss","aria-label","fishError","Navbar","style","backgroundColor","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-labelledby","FishTable","props","useState","setGenus","setSpecies","setCommonName","setName","setColor","setGender","setPurchaseDate","setCount","setErr","sortable","pageSize","length","columns","Header","accessor","headerClassName","Cell","value","row","onClick","original","data-bs-parent","htmlFor","onChange","target","min","preventDefault","uppercaseGender","tankStatisticsError","TankStatisticsTable","setTestDate","useRef","step","placeholder","ref","current","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06f3126a.chunk.js","sourcesContent":["import Admin from \"./Admin\";\nexport default Admin;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport { Fish, Tank } from \"../\";\n\nconst App = observer(() => {\n  return (\n    <Router>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/fish\" />\n        <Route path=\"/fish\" component={Fish} />\n        <Route path=\"/tank\" component={Tank} />\n      </Switch>\n    </Router>\n  );\n});\n\nexport default App;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass FishStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fishState = {\n    fish: [],\n\n    heartbeat: {\n      fishbase: {\n        status: \"\",\n      },\n    },\n\n    error: null,\n  };\n\n  heartbeat = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/heartbeat\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.heartbeat.fishbase.status =\n            res?.data?.fishbase?.status;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  listFish = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.fish = res.data.fish;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addFish = ({\n    genus,\n    species,\n    commonName,\n    name,\n    color,\n    gender,\n    purchaseDate,\n    count,\n  }) => {\n    if (gender === \"\") {\n      gender = \"UNSPECIFIED\";\n    }\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n      data: {\n        genus,\n        species,\n        commonName,\n        name,\n        color,\n        gender: gender.toUpperCase(),\n        purchaseDate,\n        count,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.fish.push(res?.data?.fish);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.fishState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeFish = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.fishState.fish = this.fishState.fish.filter((e) => e.id !== id);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.fishState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst fishStore = new FishStore();\nconst FishStoreContext = React.createContext(fishStore);\nexport default FishStoreContext;\n","import FishStoreContext from \"./FishStore\";\nexport default FishStoreContext;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass TankStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  tankState = {\n    stats: [],\n\n    error: null,\n  };\n\n  resetError = () => {\n    this.tankState.error = null;\n  };\n\n  listTankStatistics = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.tankState.stats = res.data.tankStatistics;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addTankStatistic = ({\n    testDate,\n    ammonia,\n    ph,\n    nitrate,\n    nitrite,\n    gh,\n    kh,\n    phosphate,\n  }) => {\n    this.resetError();\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics\",\n      data: {\n        testDate,\n        ammonia,\n        ph,\n        nitrate,\n        nitrite,\n        gh,\n        kh,\n        phosphate,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.tankState.stats.push(res?.data?.tankStatistic);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.tankState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeTankStatistic = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.tankState.stats = this.tankState.stats.filter(\n            (e) => e.id !== id\n          );\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.tankState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst tankStore = new TankStore();\nconst TankStoreContext = React.createContext(tankStore);\nexport default TankStoreContext;\n","import TankStoreContext from \"./TankStore\";\nexport default TankStoreContext;\n","import Fish from \"./Fish\";\nexport default Fish;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { FishTable } from \"../\";\nimport { FishStoreContext } from \"../../stores\";\n\nexport const Fish = observer(() => {\n  const { fishState, heartbeat, listFish, addFish, removeFish } =\n    useContext(FishStoreContext);\n\n  useEffect(() => {\n    listFish();\n    heartbeat();\n  }, [fishState]);\n\n  const fishbaseDown = fishState.heartbeat.fishbase.status.toLowerCase();\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      {fishbaseDown && (\n        <div className=\"container\">\n          <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\n            <h4 className=\"alert-heading\">Fishbase Down</h4>\n            <p>\n              Fishbase appears to be down, meaning certain functions such as the\n              auto-population of the Ecosystem information will not be\n              completed.\n            </p>\n            <hr />\n            <p className=\"mb-0\">\n              This is unlikely to be an issue with TrackMyFish and you should\n              check the{\" \"}\n              <a href=\"https://fishbase.ropensci.org/\" className=\"alert-link\">\n                Fishbase API\n              </a>{\" \"}\n              for further details.\n            </p>\n            <button\n              type=\"button\"\n              className=\"btn-close\"\n              data-bs-dismiss=\"alert\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div className=\"mt-3 mb-3\" />\n        </div>\n      )}\n      <FishTable\n        fish={fishState.fish}\n        addFish={addFish}\n        removeFish={removeFish}\n        fishError={fishState.error}\n      />\n    </div>\n  );\n});\n\nexport default Fish;\n","import Navbar from './Navbar';\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-light\"\n      style={{ backgroundColor: \"#d7ecd9\" }}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/home\">\n          TrackMyFish\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/fish\">\n                Fish\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/tank\">\n                Tank\n              </Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              {/*  eslint-disable-next-line */}\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Useful Links\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <li>\n                  <a className=\"dropdown-item\" href=\"https://www.fishbase.de/\">\n                    Fishbase\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import FishTable from \"./FishTable\";\nexport default FishTable;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nconst FishTable = observer((props) => {\n  const [genus, setGenus] = useState(\"\");\n  const [species, setSpecies] = useState(\"\");\n  const [commonName, setCommonName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  const [err, setErr] = useState(\"\");\n\n  const addFish = (e) => {\n    e.preventDefault();\n\n    const uppercaseGender = gender.toUpperCase();\n\n    props.addFish({\n      genus,\n      species,\n      commonName,\n      name,\n      color,\n      gender,\n      uppercaseGender,\n      purchaseDate,\n      count,\n    });\n  };\n\n  const error = props.fishError || err;\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"text-center\">Fish</h3>\n      <ReactTable\n        data={props.fish}\n        sortable={true}\n        pageSize={props.fish.length}\n        columns={[\n          {\n            Header: \"ID\",\n            accessor: \"id\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Genus\",\n            accessor: \"genus\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Species\",\n            accessor: \"species\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Common Name\",\n            accessor: \"commonName\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Name\",\n            accessor: \"name\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Color\",\n            accessor: \"color\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Gender\",\n            accessor: \"gender\",\n            headerClassName: \"text-start\",\n            Cell: ({ value }) => (value === \"UNSPECIFIED\" ? \"\" : value),\n          },\n          {\n            Header: \"Purchase Date\",\n            accessor: \"purchaseDate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Ecosystem\",\n            columns: [\n              {\n                Header: \"Name\",\n                accessor: \"ecosystemName\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Type\",\n                accessor: \"ecosystemType\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Location\",\n                accessor: \"ecosystemLocation\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Salinity\",\n                accessor: \"salinity\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Climate\",\n                accessor: \"climate\",\n                headerClassName: \"text-start\",\n              },\n            ],\n          },\n          {\n            Header: \"Count\",\n            accessor: \"count\",\n            headerClassName: \"text-start\",\n          },\n          {\n            className: \"text-center\",\n            Cell: (row) => (\n              <button\n                className=\"btn btn-danger ml-2\"\n                onClick={() => props.removeFish(row.original.id)}\n              >\n                Remove\n              </button>\n            ),\n          },\n        ]}\n      />\n      <div className=\"accordion\" id=\"create-fish-accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"fish-heading\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapse-fish\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse-fish\"\n            >\n              Add Fish\n            </button>\n          </h2>\n          <div\n            id=\"collapse-fish\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"fish-heading\"\n            data-bs-parent=\"#create-fish-accordion\"\n          >\n            <div className=\"accordion-body\">\n              <form>\n                <div className=\"container-fluid ps-0 pe-0\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGenus\" className=\"form-label\">\n                          Genus\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputGenus\"\n                          onChange={(e) =>\n                            setErr(\"\") || setGenus(e.target.value)\n                          }\n                          value={genus}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputSpecies\" className=\"form-label\">\n                          Species\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputSpecies\"\n                          onChange={(e) =>\n                            setErr(\"\") || setSpecies(e.target.value)\n                          }\n                          value={species}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputCommonName\" className=\"form-label\">\n                          Common Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputCommonName\"\n                          onChange={(e) =>\n                            setErr(\"\") || setCommonName(e.target.value)\n                          }\n                          value={commonName}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputName\" className=\"form-label\">\n                          Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputName\"\n                          onChange={(e) =>\n                            setErr(\"\") || setName(e.target.value)\n                          }\n                          value={name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputColor\" className=\"form-label\">\n                          Color\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputColor\"\n                          onChange={(e) =>\n                            setErr(\"\") || setColor(e.target.value)\n                          }\n                          value={color}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGender\" className=\"form-label\">\n                          Gender\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputGender\"\n                          onChange={(e) =>\n                            setErr(\"\") || setGender(e.target.value)\n                          }\n                          value={gender}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label\n                            htmlFor=\"inputPurchaseDate\"\n                            className=\"form-label\"\n                          >\n                            Purchase Date\n                          </label>\n                          <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            id=\"inputPurchaseDate\"\n                            onChange={(e) =>\n                              setErr(\"\") || setPurchaseDate(e.target.value)\n                            }\n                            value={purchaseDate}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputCount\" className=\"form-label\">\n                            Count\n                          </label>\n                          <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            id=\"inputCount\"\n                            min=\"0\"\n                            onChange={(e) =>\n                              setErr(\"\") || setCount(e.target.value)\n                            }\n                            value={count}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={addFish}\n                >\n                  Submit\n                </button>\n              </form>\n              {error && (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                  {error}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default FishTable;\n","import Tank from \"./Tank\";\nexport default Tank;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { TankStatisticsTable } from \"../\";\nimport { TankStoreContext } from \"../../stores\";\n\nexport const Tank = observer(() => {\n  const {\n    tankState,\n    resetError,\n    listTankStatistics,\n    addTankStatistic,\n    removeTankStatistic,\n  } = useContext(TankStoreContext);\n\n  useEffect(() => {\n    listTankStatistics();\n  }, [tankState]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      <TankStatisticsTable\n        tankStatistics={tankState.stats}\n        addTankStatistic={addTankStatistic}\n        removeTankStatistic={removeTankStatistic}\n        tankStatisticsError={tankState.error}\n        resetError={resetError}\n      />\n    </div>\n  );\n});\n\nexport default Tank;\n","import TankStatisticsTable from \"./TankStatisticsTable\";\nexport default TankStatisticsTable;\n","import React, { useRef, useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nconst TankStatisticsTable = observer((props) => {\n  const [testDate, setTestDate] = useState(\"\");\n\n  const ph = useRef(null);\n  const ammonia = useRef(null);\n  const nitrate = useRef(null);\n  const nitrite = useRef(null);\n  const gh = useRef(null);\n  const kh = useRef(null);\n  const phosphate = useRef(null);\n\n  const addTankStatistic = (e) => {\n    e.preventDefault();\n\n    props.addTankStatistic({\n      testDate,\n      ammonia: ammonia.current.value ? ammonia.current.value : null,\n      ph: ph.current.value ? ph.current.value : null,\n      nitrate: nitrate.current.value ? nitrate.current.value : null,\n      nitrite: nitrite.current.value ? nitrite.current.value : null,\n      gh: gh.current.value ? gh.current.value : null,\n      kh: kh.current.value ? kh.current.value : null,\n      phosphate: phosphate.current.value ? phosphate.current.value : null,\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"text-center\">Tank Statistics</h3>\n      <ReactTable\n        data={props.tankStatistics}\n        sortable={true}\n        pageSize={props.tankStatistics.length}\n        columns={[\n          {\n            Header: \"ID\",\n            accessor: \"id\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Test Date\",\n            accessor: \"testDate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Ammonia\",\n            accessor: \"ammonia\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"pH\",\n            accessor: \"ph\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Nitite\",\n            accessor: \"nitrite\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Nitrate\",\n            accessor: \"nitrate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"GH\",\n            accessor: \"gh\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"KH\",\n            accessor: \"kh\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Phosphate\",\n            accessor: \"phosphate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            className: \"text-center\",\n            Cell: (row) => (\n              <button\n                className=\"btn btn-danger ml-2\"\n                onClick={() => props.removeTankStatistic(row.original.id)}\n              >\n                Remove\n              </button>\n            ),\n          },\n        ]}\n      />\n      <div className=\"accordion\" id=\"create-tank-statistic-accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"fish-heading\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapse-tank-statistic\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse-tank-statistic\"\n            >\n              Add Tank Statistics\n            </button>\n          </h2>\n          <div\n            id=\"collapse-tank-statistic\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"fish-heading\"\n            data-bs-parent=\"#create-tank-statistic-accordion\"\n          >\n            <div className=\"accordion-body\">\n              <form>\n                <div className=\"container-fluid ps-0 pe-0\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputTestDate\" className=\"form-label\">\n                          Test Date\n                        </label>\n                        <input\n                          type=\"date\"\n                          className=\"form-control\"\n                          id=\"inputTestDate\"\n                          onChange={(e) => setTestDate(e.target.value)}\n                          value={testDate}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputPH\" className=\"form-label\">\n                          pH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputPH\"\n                          placeholder=\"pH\"\n                          ref={ph}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputAmmonia\" className=\"form-label\">\n                          Ammonia\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputAmmonia\"\n                          placeholder=\"Ammonia (ppm)\"\n                          ref={ammonia}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputNitrite\" className=\"form-label\">\n                          Nitrite (NO2)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputNitrite\"\n                          placeholder=\"Nitrite (ppm)\"\n                          ref={nitrite}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputNitrate\" className=\"form-label\">\n                          Nitrate (NO3)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputNitrate\"\n                          placeholder=\"Nitrate (ppm)\"\n                          ref={nitrate}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputPhosphate\" className=\"form-label\">\n                          Phosphate (PO4)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputPhosphate\"\n                          placeholder=\"Phosphate (ppm)\"\n                          ref={phosphate}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGH\" className=\"form-label\">\n                          GH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputGH\"\n                          placeholder=\"GH\"\n                          ref={gh}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputKH\" className=\"form-label\">\n                          KH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputKH\"\n                          placeholder=\"KH\"\n                          ref={kh}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={addTankStatistic}\n                >\n                  Submit\n                </button>\n              </form>\n              {props.tankStatisticsError && (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                  {props.tankStatisticsError}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default TankStatisticsTable;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./index.css\";\nimport \"./scss/_custom.scss\";\n\nimport { App } from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}