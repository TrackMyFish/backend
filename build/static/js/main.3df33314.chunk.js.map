{"version":3,"sources":["components/Admin/index.js","components/App/index.js","components/App/App.js","stores/RootStore/RootStore.js","stores/RootStore/index.js","components/Home/index.js","components/Home/Home.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/FishTable/index.js","components/FishTable/FishTable.js","reportWebVitals.js","index.js"],"names":["App","observer","rootStore","rootState","fish","heartbeat","fishbase","status","error","axios","method","headers","url","config","server","baseURL","then","res","runInAction","data","catch","err","console","log","response","listFish","addFish","genus","species","commonName","name","color","gender","purchaseDate","count","toUpperCase","push","message","removeFish","id","filter","e","makeAutoObservable","this","RootStoreContext","React","createContext","Home","useContext","useEffect","fishbaseDown","toLowerCase","className","role","href","class","type","data-bs-dismiss","aria-label","Navbar","style","backgroundColor","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-labelledby","FishTable","props","useState","setGenus","setSpecies","setCommonName","setName","setColor","setGender","setPurchaseDate","setCount","setErr","fishError","sortable","pageSize","length","columns","Header","accessor","headerClassName","Cell","row","onClick","original","data-bs-parent","htmlFor","onChange","target","value","min","preventDefault","uppercaseGender","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3df33314.chunk.js","sourcesContent":["import Admin from \"./Admin\";\nexport default Admin;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport \"./App.scss\";\n\nimport { Home } from \"../\";\n\nconst App = observer(() => {\n  return <Home />;\n});\n\nexport default App;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass RootStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  rootState = {\n    fish: [],\n\n    heartbeat: {\n      fishbase: {\n        status: \"\",\n      },\n    },\n\n    error: null,\n  };\n\n  heartbeat = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/heartbeat\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.rootState.heartbeat.fishbase.status =\n            res?.data?.fishbase?.status;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  listFish = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.rootState.fish = res.data.fish;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addFish = ({\n    genus,\n    species,\n    commonName,\n    name,\n    color,\n    gender,\n    purchaseDate,\n    count,\n  }) => {\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n      data: {\n        genus,\n        species,\n        commonName,\n        name,\n        color,\n        gender: gender.toUpperCase(),\n        purchaseDate,\n        count,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.rootState.fish.push(res?.data?.fish);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.rootState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeFish = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.rootState.fish = this.rootState.fish.filter((e) => e.id !== id);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.rootState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst rootStore = new RootStore();\nconst RootStoreContext = React.createContext(rootStore);\nexport default RootStoreContext;\n","import RootStoreContext from \"./RootStore\";\nexport default RootStoreContext;\n","import Home from \"./Home\";\nexport default Home;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { FishTable } from \"../\";\nimport { RootStoreContext } from \"../../stores\";\n\nexport const Home = observer(() => {\n  const { rootState, heartbeat, listFish, addFish, removeFish } =\n    useContext(RootStoreContext);\n\n  useEffect(() => {\n    listFish();\n    heartbeat();\n  }, [rootState]);\n\n  const fishbaseDown = rootState.heartbeat.fishbase.status.toLowerCase();\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      {fishbaseDown && (\n        <div className=\"container\">\n          <div className=\"alert alert-danger alert-dismissible\" role=\"alert\">\n            <h4 className=\"alert-heading\">Fishbase Down</h4>\n            <p>\n              Fishbase appears to be down, meaning certain functions such as the\n              auto-population of the Ecosystem information will not be\n              completed.\n            </p>\n            <hr />\n            <p className=\"mb-0\">\n              This is unlikely to be an issue with TrackMyFish and you should\n              check the{\" \"}\n              <a href=\"https://fishbase.ropensci.org/\" class=\"alert-link\">\n                Fishbase API\n              </a>{\" \"}\n              for further details.\n            </p>\n            <button\n              type=\"button\"\n              class=\"btn-close\"\n              data-bs-dismiss=\"alert\"\n              aria-label=\"Close\"\n            ></button>\n          </div>\n          <div className=\"mt-3 mb-3\" />\n        </div>\n      )}\n      <FishTable\n        fish={rootState.fish}\n        addFish={addFish}\n        removeFish={removeFish}\n      />\n    </div>\n  );\n});\n\nexport default Home;\n","import Navbar from './Navbar';\nexport default Navbar;\n","const Navbar = () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-light\"\n      style={{ backgroundColor: \"#d7ecd9\" }}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/home\">\n          TrackMyFish\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item dropdown\">\n              {/*  eslint-disable-next-line */}\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Useful Links\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <li>\n                  <a className=\"dropdown-item\" href=\"https://www.fishbase.de/\">\n                    Fishbase\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import FishTable from \"./FishTable\";\nexport default FishTable;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nconst FishTable = observer((props) => {\n  const [genus, setGenus] = useState(\"\");\n  const [species, setSpecies] = useState(\"\");\n  const [commonName, setCommonName] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  const [err, setErr] = useState(\"\");\n\n  const addFish = (e) => {\n    e.preventDefault();\n\n    const uppercaseGender = gender.toUpperCase();\n\n    props.addFish({\n      genus,\n      species,\n      commonName,\n      name,\n      color,\n      gender,\n      uppercaseGender,\n      purchaseDate,\n      count,\n    });\n  };\n\n  const error = props.fishError || err;\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"text-center\">Fish</h3>\n      <ReactTable\n        data={props.fish}\n        sortable={true}\n        pageSize={props.fish.length}\n        columns={[\n          {\n            Header: \"ID\",\n            accessor: \"id\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Genus\",\n            accessor: \"genus\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Species\",\n            accessor: \"species\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Common Name\",\n            accessor: \"commonName\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Name\",\n            accessor: \"name\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Color\",\n            accessor: \"color\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Gender\",\n            accessor: \"gender\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Purchase Date\",\n            accessor: \"purchaseDate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Ecosystem\",\n            columns: [\n              {\n                Header: \"Name\",\n                accessor: \"ecosystemName\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Type\",\n                accessor: \"ecosystemType\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Location\",\n                accessor: \"ecosystemLocation\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Salinity\",\n                accessor: \"salinity\",\n                headerClassName: \"text-start\",\n              },\n              {\n                Header: \"Climate\",\n                accessor: \"climate\",\n                headerClassName: \"text-start\",\n              },\n            ],\n          },\n          {\n            Header: \"Count\",\n            accessor: \"count\",\n            headerClassName: \"text-start\",\n          },\n          {\n            className: \"text-center\",\n            Cell: (row) => (\n              <button\n                className=\"btn btn-danger ml-2\"\n                onClick={() => props.removeFish(row.original.id)}\n              >\n                Remove\n              </button>\n            ),\n          },\n        ]}\n      />\n      <div className=\"accordion\" id=\"create-fish-accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"fish-heading\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapse-fish\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse-fish\"\n            >\n              Add Fish\n            </button>\n          </h2>\n          <div\n            id=\"collapse-fish\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"fish-heading\"\n            data-bs-parent=\"#create-fish-accordion\"\n          >\n            <div className=\"accordion-body\">\n              <form>\n                <div className=\"container-fluid ps-0 pe-0\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGenus\" className=\"form-label\">\n                          Genus\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputGenus\"\n                          onChange={(e) =>\n                            setErr(\"\") || setGenus(e.target.value)\n                          }\n                          value={genus}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputSpecies\" className=\"form-label\">\n                          Species\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputSpecies\"\n                          onChange={(e) =>\n                            setErr(\"\") || setSpecies(e.target.value)\n                          }\n                          value={species}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputCommonName\" className=\"form-label\">\n                          Common Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputCommonName\"\n                          onChange={(e) =>\n                            setErr(\"\") || setCommonName(e.target.value)\n                          }\n                          value={commonName}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputName\" className=\"form-label\">\n                          Name\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputName\"\n                          onChange={(e) =>\n                            setErr(\"\") || setName(e.target.value)\n                          }\n                          value={name}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputColor\" className=\"form-label\">\n                          Color\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputColor\"\n                          onChange={(e) =>\n                            setErr(\"\") || setColor(e.target.value)\n                          }\n                          value={color}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGender\" className=\"form-label\">\n                          Gender\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputGender\"\n                          onChange={(e) =>\n                            setErr(\"\") || setGender(e.target.value)\n                          }\n                          value={gender}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label\n                            htmlFor=\"inputPurchaseDate\"\n                            className=\"form-label\"\n                          >\n                            Purchase Date\n                          </label>\n                          <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            id=\"inputPurchaseDate\"\n                            onChange={(e) =>\n                              setErr(\"\") || setPurchaseDate(e.target.value)\n                            }\n                            value={purchaseDate}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputCount\" className=\"form-label\">\n                            Count\n                          </label>\n                          <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            id=\"inputCount\"\n                            min=\"0\"\n                            onChange={(e) =>\n                              setErr(\"\") || setCount(e.target.value)\n                            }\n                            value={count}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={addFish}\n                >\n                  Submit\n                </button>\n              </form>\n              {error && (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                  {error}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default FishTable;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport './index.css';\nimport './scss/_custom.scss';\n\nimport { App } from './components';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}