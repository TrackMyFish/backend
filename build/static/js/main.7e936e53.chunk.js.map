{"version":3,"sources":["components/Admin/index.js","components/App/index.js","components/App/App.js","stores/FishStore/FishStore.js","stores/FishStore/index.js","stores/TankStore/TankStore.js","stores/TankStore/index.js","components/Fish/index.js","components/Fish/Fish.js","components/Navbar/index.js","components/Navbar/Navbar.js","components/FishTable/index.js","components/FishTable/FishTable.js","components/Tank/index.js","components/Tank/Tank.js","components/TankStatisticsTable/index.js","components/TankStatisticsTable/TankStatisticsTable.js","components/TankStatisticsGraph/index.js","components/TankStatisticsGraph/TankStatisticsGraph.js","reportWebVitals.js","index.js"],"names":["App","observer","exact","from","to","path","component","Fish","Tank","fishStore","fishState","fish","heartbeat","fishbase","status","error","axios","method","headers","url","config","server","baseURL","then","res","runInAction","data","catch","err","console","log","response","listFish","addFish","type","subtype","color","gender","purchaseDate","count","toUpperCase","push","message","removeFish","id","filter","e","makeAutoObservable","this","FishStoreContext","React","createContext","tankStore","tankState","stats","resetError","listTankStatistics","tankStatistics","addTankStatistic","testDate","ammonia","ph","nitrate","nitrite","gh","kh","phosphate","tankStatistic","removeTankStatistic","TankStoreContext","useContext","useEffect","className","fishError","Navbar","style","backgroundColor","href","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","role","aria-labelledby","FishTable","props","useState","setType","setSubtype","setColor","setGender","setPurchaseDate","setCount","setErr","sortable","pageSize","length","columns","Header","accessor","headerClassName","Cell","value","row","onClick","original","data-bs-parent","htmlFor","onChange","target","min","preventDefault","uppercaseGender","tankStatisticsError","TankStatisticsTable","setTestDate","useRef","step","placeholder","ref","current","TankStatisticsGraph","sorted","sort","a","b","Date","ResponsiveContainer","width","height","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","padding","YAxis","Tooltip","Legend","Line","connectNulls","stroke","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e936e53.chunk.js","sourcesContent":["import Admin from \"./Admin\";\nexport default Admin;\n","import App from \"./App\";\nexport default App;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  // HashRouter because it works better with backend routing\n  // https://github.com/gorilla/mux/issues/464\n  HashRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport \"./App.scss\";\n\nimport { Fish, Tank } from \"../\";\n\nconst App = observer(() => {\n  return (\n    <Router>\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/fish\" />\n        <Route path=\"/fish\" component={Fish} />\n        <Route path=\"/tank\" component={Tank} />\n      </Switch>\n    </Router>\n  );\n});\n\nexport default App;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass FishStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  fishState = {\n    fish: [],\n\n    heartbeat: {\n      fishbase: {\n        status: \"\",\n      },\n    },\n\n    error: null,\n  };\n\n  heartbeat = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/heartbeat\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.heartbeat.fishbase.status =\n            res?.data?.fishbase?.status;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  listFish = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.fish = res.data.fish;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addFish = ({ type, subtype, color, gender, purchaseDate, count }) => {\n    if (gender === \"\") {\n      gender = \"UNSPECIFIED\";\n    }\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish\",\n      data: {\n        type,\n        subtype,\n        color,\n        gender: gender.toUpperCase(),\n        purchaseDate,\n        count,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.fishState.fish.push(res?.data?.fish);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.fishState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeFish = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/fish/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.fishState.fish = this.fishState.fish.filter((e) => e.id !== id);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.fishState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst fishStore = new FishStore();\nconst FishStoreContext = React.createContext(fishStore);\nexport default FishStoreContext;\n","import FishStoreContext from \"./FishStore\";\nexport default FishStoreContext;\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport React from \"react\";\n\nimport axios from \"axios\";\n\nimport config from \"../../config.json\";\n\nclass TankStore {\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  tankState = {\n    stats: [],\n\n    error: null,\n  };\n\n  resetError = () => {\n    this.tankState.error = null;\n  };\n\n  listTankStatistics = () => {\n    axios({\n      method: \"get\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics\",\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.tankState.stats = res.data.tankStatistics;\n        });\n      })\n      .catch((err) => {\n        console.log(err?.response?.data);\n      });\n  };\n\n  addTankStatistic = ({\n    testDate,\n    ammonia,\n    ph,\n    nitrate,\n    nitrite,\n    gh,\n    kh,\n    phosphate,\n  }) => {\n    this.resetError();\n\n    axios({\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics\",\n      data: {\n        testDate,\n        ammonia,\n        ph,\n        nitrate,\n        nitrite,\n        gh,\n        kh,\n        phosphate,\n      },\n    })\n      .then((res) => {\n        runInAction(() => {\n          this.tankState.stats.push(res?.data?.tankStatistic);\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.tankState.error = err?.response?.data?.message;\n        });\n      });\n  };\n\n  removeTankStatistic = (id) => {\n    axios({\n      method: \"delete\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      url: config.server.baseURL + \"/tank/statistics/\" + id,\n    })\n      .then(() => {\n        runInAction(() => {\n          this.tankState.stats = this.tankState.stats.filter(\n            (e) => e.id !== id\n          );\n        });\n      })\n      .catch((err) => {\n        runInAction(() => {\n          console.log(err);\n          this.tankState.error = err?.response?.data?.message;\n        });\n      });\n  };\n}\n\nconst tankStore = new TankStore();\nconst TankStoreContext = React.createContext(tankStore);\nexport default TankStoreContext;\n","import TankStoreContext from \"./TankStore\";\nexport default TankStoreContext;\n","import Fish from \"./Fish\";\nexport default Fish;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { FishTable } from \"../\";\nimport { FishStoreContext } from \"../../stores\";\n\nexport const Fish = observer(() => {\n  const { fishState, listFish, addFish, removeFish } =\n    useContext(FishStoreContext);\n\n  useEffect(() => {\n    listFish();\n  }, [fishState]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      <FishTable\n        fish={fishState.fish}\n        addFish={addFish}\n        removeFish={removeFish}\n        fishError={fishState.error}\n      />\n    </div>\n  );\n});\n\nexport default Fish;\n","import Navbar from './Navbar';\nexport default Navbar;\n","import { Link } from \"react-router-dom\";\n\nconst Navbar = () => {\n  return (\n    <nav\n      className=\"navbar navbar-expand-lg navbar-light\"\n      style={{ backgroundColor: \"#d7ecd9\" }}\n    >\n      <div className=\"container-fluid\">\n        <a className=\"navbar-brand\" href=\"/\">\n          TrackMyFish\n        </a>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/fish\">\n                Fish\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/tank\">\n                Tank\n              </Link>\n            </li>\n            <li className=\"nav-item dropdown\">\n              {/*  eslint-disable-next-line */}\n              <a\n                className=\"nav-link dropdown-toggle\"\n                href=\"#\"\n                id=\"navbarDropdown\"\n                role=\"button\"\n                data-bs-toggle=\"dropdown\"\n                aria-expanded=\"false\"\n              >\n                Useful Links\n              </a>\n              <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                <li>\n                  <a className=\"dropdown-item\" href=\"https://www.fishbase.de/\">\n                    Fishbase\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import FishTable from \"./FishTable\";\nexport default FishTable;\n","import React, { useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nconst FishTable = observer((props) => {\n  const [type, setType] = useState(\"\");\n  const [subtype, setSubtype] = useState(\"\");\n  const [color, setColor] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [purchaseDate, setPurchaseDate] = useState(\"\");\n  const [count, setCount] = useState(0);\n\n  const [err, setErr] = useState(\"\");\n\n  const addFish = (e) => {\n    e.preventDefault();\n\n    const uppercaseGender = gender.toUpperCase();\n\n    props.addFish({\n      type,\n      subtype,\n      color,\n      gender,\n      uppercaseGender,\n      purchaseDate,\n      count,\n    });\n  };\n\n  const error = props.fishError || err;\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"text-center\">Fish</h3>\n      <ReactTable\n        data={props.fish}\n        sortable={true}\n        pageSize={props.fish.length}\n        columns={[\n          {\n            Header: \"ID\",\n            accessor: \"id\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Type\",\n            accessor: \"type\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Subtype\",\n            accessor: \"subtype\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Color\",\n            accessor: \"color\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Gender\",\n            accessor: \"gender\",\n            headerClassName: \"text-start\",\n            Cell: ({ value }) => (value === \"UNSPECIFIED\" ? \"\" : value),\n          },\n          {\n            Header: \"Purchase Date\",\n            accessor: \"purchaseDate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Count\",\n            accessor: \"count\",\n            headerClassName: \"text-start\",\n          },\n          {\n            className: \"text-center\",\n            Cell: (row) => (\n              <button\n                className=\"btn btn-danger ml-2\"\n                onClick={() => props.removeFish(row.original.id)}\n              >\n                Remove\n              </button>\n            ),\n          },\n        ]}\n      />\n      <div className=\"accordion\" id=\"create-fish-accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"fish-heading\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapse-fish\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse-fish\"\n            >\n              Add Fish\n            </button>\n          </h2>\n          <div\n            id=\"collapse-fish\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"fish-heading\"\n            data-bs-parent=\"#create-fish-accordion\"\n          >\n            <div className=\"accordion-body\">\n              <form>\n                <div className=\"container-fluid ps-0 pe-0\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputType\" className=\"form-label\">\n                          Type\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputType\"\n                          onChange={(e) =>\n                            setErr(\"\") || setType(e.target.value)\n                          }\n                          value={type}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputSubtype\" className=\"form-label\">\n                          Subtype\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputSubtype\"\n                          onChange={(e) =>\n                            setErr(\"\") || setSubtype(e.target.value)\n                          }\n                          value={subtype}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\"></div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputColor\" className=\"form-label\">\n                          Color\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputColor\"\n                          onChange={(e) =>\n                            setErr(\"\") || setColor(e.target.value)\n                          }\n                          value={color}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGender\" className=\"form-label\">\n                          Gender\n                        </label>\n                        <input\n                          type=\"text\"\n                          className=\"form-control\"\n                          id=\"inputGender\"\n                          onChange={(e) =>\n                            setErr(\"\") || setGender(e.target.value)\n                          }\n                          value={gender}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"row\">\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label\n                            htmlFor=\"inputPurchaseDate\"\n                            className=\"form-label\"\n                          >\n                            Purchase Date\n                          </label>\n                          <input\n                            type=\"date\"\n                            className=\"form-control\"\n                            id=\"inputPurchaseDate\"\n                            onChange={(e) =>\n                              setErr(\"\") || setPurchaseDate(e.target.value)\n                            }\n                            value={purchaseDate}\n                          />\n                        </div>\n                      </div>\n                      <div className=\"col\">\n                        <div className=\"mb-3\">\n                          <label htmlFor=\"inputCount\" className=\"form-label\">\n                            Count\n                          </label>\n                          <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            id=\"inputCount\"\n                            min=\"0\"\n                            onChange={(e) =>\n                              setErr(\"\") || setCount(e.target.value)\n                            }\n                            value={count}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={addFish}\n                >\n                  Submit\n                </button>\n              </form>\n              {error && (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                  {error}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default FishTable;\n","import Tank from \"./Tank\";\nexport default Tank;\n","import React, { useContext, useEffect } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport { Navbar } from \"../\";\nimport { TankStatisticsTable, TankStatisticsGraph } from \"../\";\nimport { TankStoreContext } from \"../../stores\";\n\nexport const Tank = observer(() => {\n  const {\n    tankState,\n    resetError,\n    listTankStatistics,\n    addTankStatistic,\n    removeTankStatistic,\n  } = useContext(TankStoreContext);\n\n  useEffect(() => {\n    listTankStatistics();\n  }, [tankState]);\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"mt-3 mb-3\" />\n      <TankStatisticsTable\n        tankStatistics={tankState.stats}\n        addTankStatistic={addTankStatistic}\n        removeTankStatistic={removeTankStatistic}\n        tankStatisticsError={tankState.error}\n        resetError={resetError}\n      />\n      <div className=\"mt-3 mb-3\" />\n      <TankStatisticsGraph tankStatistics={tankState.stats} />\n    </div>\n  );\n});\n\nexport default Tank;\n","import TankStatisticsTable from \"./TankStatisticsTable\";\nexport default TankStatisticsTable;\n","import React, { useRef, useState } from \"react\";\nimport { observer } from \"mobx-react\";\n\nimport ReactTable from \"react-table-6\";\nimport \"react-table-6/react-table.css\";\n\nconst TankStatisticsTable = observer((props) => {\n  const [testDate, setTestDate] = useState(\"\");\n\n  const ph = useRef(null);\n  const ammonia = useRef(null);\n  const nitrate = useRef(null);\n  const nitrite = useRef(null);\n  const gh = useRef(null);\n  const kh = useRef(null);\n  const phosphate = useRef(null);\n\n  const addTankStatistic = (e) => {\n    e.preventDefault();\n\n    props.addTankStatistic({\n      testDate,\n      ammonia: ammonia.current.value ? ammonia.current.value : null,\n      ph: ph.current.value ? ph.current.value : null,\n      nitrate: nitrate.current.value ? nitrate.current.value : null,\n      nitrite: nitrite.current.value ? nitrite.current.value : null,\n      gh: gh.current.value ? gh.current.value : null,\n      kh: kh.current.value ? kh.current.value : null,\n      phosphate: phosphate.current.value ? phosphate.current.value : null,\n    });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <h3 className=\"text-center\">Tank Statistics</h3>\n      <ReactTable\n        data={props.tankStatistics}\n        sortable={true}\n        pageSize={props.tankStatistics.length}\n        columns={[\n          {\n            Header: \"ID\",\n            accessor: \"id\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Test Date\",\n            accessor: \"testDate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Ammonia\",\n            accessor: \"ammonia\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"pH\",\n            accessor: \"ph\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Nitite\",\n            accessor: \"nitrite\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Nitrate\",\n            accessor: \"nitrate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"GH\",\n            accessor: \"gh\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"KH\",\n            accessor: \"kh\",\n            headerClassName: \"text-start\",\n          },\n          {\n            Header: \"Phosphate\",\n            accessor: \"phosphate\",\n            headerClassName: \"text-start\",\n          },\n          {\n            className: \"text-center\",\n            Cell: (row) => (\n              <button\n                className=\"btn btn-danger ml-2\"\n                onClick={() => props.removeTankStatistic(row.original.id)}\n              >\n                Remove\n              </button>\n            ),\n          },\n        ]}\n      />\n      <div className=\"accordion\" id=\"create-tank-statistic-accordion\">\n        <div className=\"accordion-item\">\n          <h2 className=\"accordion-header\" id=\"fish-heading\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapse-tank-statistic\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapse-tank-statistic\"\n            >\n              Add Tank Statistics\n            </button>\n          </h2>\n          <div\n            id=\"collapse-tank-statistic\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"fish-heading\"\n            data-bs-parent=\"#create-tank-statistic-accordion\"\n          >\n            <div className=\"accordion-body\">\n              <form>\n                <div className=\"container-fluid ps-0 pe-0\">\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputTestDate\" className=\"form-label\">\n                          Test Date\n                        </label>\n                        <input\n                          type=\"date\"\n                          className=\"form-control\"\n                          id=\"inputTestDate\"\n                          onChange={(e) => setTestDate(e.target.value)}\n                          value={testDate}\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputPH\" className=\"form-label\">\n                          pH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputPH\"\n                          placeholder=\"pH\"\n                          ref={ph}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputAmmonia\" className=\"form-label\">\n                          Ammonia\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputAmmonia\"\n                          placeholder=\"Ammonia (ppm)\"\n                          ref={ammonia}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputNitrite\" className=\"form-label\">\n                          Nitrite (NO2)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputNitrite\"\n                          placeholder=\"Nitrite (ppm)\"\n                          ref={nitrite}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputNitrate\" className=\"form-label\">\n                          Nitrate (NO3)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputNitrate\"\n                          placeholder=\"Nitrate (ppm)\"\n                          ref={nitrate}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputPhosphate\" className=\"form-label\">\n                          Phosphate (PO4)\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputPhosphate\"\n                          placeholder=\"Phosphate (ppm)\"\n                          ref={phosphate}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"row\">\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputGH\" className=\"form-label\">\n                          GH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputGH\"\n                          placeholder=\"GH\"\n                          ref={gh}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                    <div className=\"col\">\n                      <div className=\"mb-3\">\n                        <label htmlFor=\"inputKH\" className=\"form-label\">\n                          KH\n                        </label>\n                        <input\n                          type=\"number\"\n                          step=\"0.01\"\n                          className=\"form-control\"\n                          id=\"inputKH\"\n                          placeholder=\"KH\"\n                          ref={kh}\n                          onChange={() =>\n                            props.tankStatisticsError && props.resetError()\n                          }\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary\"\n                  onClick={addTankStatistic}\n                >\n                  Submit\n                </button>\n              </form>\n              {props.tankStatisticsError && (\n                <div className=\"alert alert-danger mt-3\" role=\"alert\">\n                  {props.tankStatisticsError}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default TankStatisticsTable;\n","import TankStatisticsGraph from \"./TankStatisticsGraph\";\nexport default TankStatisticsGraph;\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  ResponsiveContainer,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\nimport \"react-table-6/react-table.css\";\n\nconst TankStatisticsGraph = observer((props) => {\n  const sorted = props.tankStatistics\n    .filter((e) => e.testDate !== \"\")\n    .sort((a, b) => new Date(a.testDate) - new Date(b.testDate));\n\n  return (\n    <ResponsiveContainer width=\"50%\" height=\"50%\">\n      <LineChart\n        data={sorted}\n        margin={{ top: 5, right: 20, left: 10, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"testDate\" padding={{ left: 30, right: 30 }} />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line connectNulls type=\"monotone\" dataKey=\"ammonia\" stroke=\"#ff7300\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"ph\" stroke=\"#387908\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"nitrite\" stroke=\"#ff008c\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"nitrate\" stroke=\"#0077ff\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"gh\" stroke=\"#aa00ff\" />\n        <Line connectNulls type=\"monotone\" dataKey=\"kh\" stroke=\"#ff0011\" />\n        <Line\n          connectNulls\n          type=\"monotone\"\n          dataKey=\"phosphate\"\n          stroke=\"#5c5c5c\"\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n});\n\nexport default TankStatisticsGraph;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\nimport \"./index.css\";\nimport \"./scss/_custom.scss\";\n\nimport { App } from \"./components\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}